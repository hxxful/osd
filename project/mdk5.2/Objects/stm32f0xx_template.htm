<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\stm32f0xx_template.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\stm32f0xx_template.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Tue Mar 13 15:27:46 2018
<BR><P>
<H3>Maximum Stack Usage =         80 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; app_init &rArr; max7456_init &rArr; max7456_draw_allchar &rArr; max7456_write_char_xy &rArr; max7456_write_char &rArr; max7456_write_reg
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[11]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[10]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[1a]">SPI1_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from drv_systick.o(i.SysTick_Handler) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[1d]">SystemInit</a> from drv_clock.o(i.SystemInit) referenced from startup_stm32f031.o(.text)
 <LI><a href="#[16]">TIM14_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[17]">TIM16_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[18]">TIM17_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[12]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[13]">TIM1_CC_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[14]">TIM2_IRQHandler</a> from drv_timers.o(i.TIM2_IRQHandler) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[15]">TIM3_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[1b]">USART1_IRQHandler</a> from drv_usart_hardware.o(i.USART1_IRQHandler) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32f031.o(.text) referenced from startup_stm32f031.o(RESET)
 <LI><a href="#[1e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f031.o(.text)
 <LI><a href="#[28]">drv_led_read</a> from drv_led.o(i.drv_led_read) referenced from sys_api.o(i.sys_api_init)
 <LI><a href="#[29]">drv_led_write</a> from drv_led.o(i.drv_led_write) referenced from sys_api.o(i.sys_api_init)
 <LI><a href="#[24]">drv_max7456_connect</a> from drv_max7456.o(i.drv_max7456_connect) referenced from sys_api.o(i.sys_api_init)
 <LI><a href="#[25]">drv_max7456_disconnect</a> from drv_max7456.o(i.drv_max7456_disconnect) referenced from sys_api.o(i.sys_api_init)
 <LI><a href="#[26]">drv_max7456_read</a> from drv_max7456.o(i.drv_max7456_read) referenced from sys_api.o(i.sys_api_init)
 <LI><a href="#[27]">drv_max7456_write</a> from drv_max7456.o(i.drv_max7456_write) referenced from sys_api.o(i.sys_api_init)
 <LI><a href="#[1f]">fputc</a> from sys_printf.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[1c]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[21]">sys_delay_ms</a> from sys_delay.o(i.sys_delay_ms) referenced from sys_api.o(i.sys_api_init)
 <LI><a href="#[20]">sys_delay_us</a> from sys_delay.o(i.sys_delay_us) referenced from sys_api.o(i.sys_api_init)
 <LI><a href="#[22]">sys_frame_read</a> from sys_protocol.o(i.sys_frame_read) referenced from sys_api.o(i.sys_api_init)
 <LI><a href="#[23]">sys_frame_write</a> from sys_protocol.o(i.sys_frame_write) referenced from sys_api.o(i.sys_api_init)
 <LI><a href="#[2c]">task_debug</a> from app_debug.o(i.task_debug) referenced from app_speedgroup.o(.data)
 <LI><a href="#[2d]">task_led</a> from app_led.o(i.task_led) referenced from app_speedgroup.o(.data)
 <LI><a href="#[2b]">task_max7456_draw_osd</a> from app_max7456.o(i.task_max7456_draw_osd) referenced from app_speedgroup.o(.data)
 <LI><a href="#[2a]">task_null</a> from sys.o(i.task_null) referenced 12 times from app_speedgroup.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(.text)
</UL>
<P><STRONG><a name="[74]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[75]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[76]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[77]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[78]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[79]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_usart1_hardware_init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_read
</UL>

<P><STRONG><a name="[7c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[7e]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[7f]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[80]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[35]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[82]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drv_systick.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, drv_clock.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>TIM2_IRQHandler</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, drv_timers.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM2_IRQHandler &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>USART1_IRQHandler</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, drv_usart_hardware.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART1_IRQHandler &rArr; sys_frame_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_parse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f031.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[83]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[5e]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_debug_read_frame
</UL>

<P><STRONG><a name="[84]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[85]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[3d]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[86]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[87]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[88]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[48]"></a>app_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, main.o(i.app_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_init &rArr; max7456_init &rArr; max7456_draw_allchar &rArr; max7456_write_char_xy &rArr; max7456_write_char &rArr; max7456_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>drv_clock_inside</STRONG> (Thumb, 126 bytes, Stack size 12 bytes, drv_clock.o(i.drv_clock_inside))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = drv_clock_inside
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_init
</UL>

<P><STRONG><a name="[4c]"></a>drv_irq_usart1_disable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, drv_usart_hardware.o(i.drv_irq_usart1_disable))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_max7456_write
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_max7456_read
</UL>

<P><STRONG><a name="[4e]"></a>drv_irq_usart1_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, drv_usart_hardware.o(i.drv_irq_usart1_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_max7456_write
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_max7456_read
</UL>

<P><STRONG><a name="[72]"></a>drv_led_init</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, drv_led.o(i.drv_led_init))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[28]"></a>drv_led_read</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, drv_led.o(i.drv_led_read))
<BR>[Address Reference Count : 1]<UL><LI> sys_api.o(i.sys_api_init)
</UL>
<P><STRONG><a name="[29]"></a>drv_led_write</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, drv_led.o(i.drv_led_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_led_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_api.o(i.sys_api_init)
</UL>
<P><STRONG><a name="[24]"></a>drv_max7456_connect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, drv_max7456.o(i.drv_max7456_connect))
<BR>[Address Reference Count : 1]<UL><LI> sys_api.o(i.sys_api_init)
</UL>
<P><STRONG><a name="[25]"></a>drv_max7456_disconnect</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_max7456.o(i.drv_max7456_disconnect))
<BR>[Address Reference Count : 1]<UL><LI> sys_api.o(i.sys_api_init)
</UL>
<P><STRONG><a name="[4a]"></a>drv_max7456_init</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, drv_max7456.o(i.drv_max7456_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_max7456_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_spi1_hardware_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[26]"></a>drv_max7456_read</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_max7456.o(i.drv_max7456_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_max7456_read &rArr; drv_spi1_hardware_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_irq_usart1_enable
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_irq_usart1_disable
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_spi1_hardware_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_api.o(i.sys_api_init)
</UL>
<P><STRONG><a name="[27]"></a>drv_max7456_write</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_max7456.o(i.drv_max7456_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_max7456_write &rArr; drv_spi1_hardware_write
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_irq_usart1_enable
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_irq_usart1_disable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_spi1_hardware_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_api.o(i.sys_api_init)
</UL>
<P><STRONG><a name="[53]"></a>drv_nvic_init</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, drv_common.o(i.drv_nvic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = drv_nvic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_usart1_hardware_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_timer2_init
</UL>

<P><STRONG><a name="[4b]"></a>drv_spi1_hardware_init</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, drv_spi_hardware.o(i.drv_spi1_hardware_init))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_max7456_init
</UL>

<P><STRONG><a name="[4d]"></a>drv_spi1_hardware_read</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, drv_spi_hardware.o(i.drv_spi1_hardware_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_spi1_hardware_read
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_senddata8
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_receivedata8
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_max7456_read
</UL>

<P><STRONG><a name="[4f]"></a>drv_spi1_hardware_write</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, drv_spi_hardware.o(i.drv_spi1_hardware_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_spi1_hardware_write
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_senddata8
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_receivedata8
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_max7456_write
</UL>

<P><STRONG><a name="[69]"></a>drv_systick_delay_ms</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, drv_systick.o(i.drv_systick_delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_ms
</UL>

<P><STRONG><a name="[6a]"></a>drv_systick_delay_us</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, drv_systick.o(i.drv_systick_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
</UL>

<P><STRONG><a name="[68]"></a>drv_systick_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, drv_systick.o(i.drv_systick_init))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_init
</UL>

<P><STRONG><a name="[52]"></a>drv_timer2_init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, drv_timers.o(i.drv_timer2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = drv_timer2_init &rArr; drv_nvic_init
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_nvic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[54]"></a>drv_usart1_hardware_init</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, drv_usart_hardware.o(i.drv_usart1_hardware_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = drv_usart1_hardware_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_nvic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[55]"></a>drv_usart1_hardware_write</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, drv_usart_hardware.o(i.drv_usart1_hardware_write))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[1f]"></a>fputc</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, sys_printf.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = fputc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_usart1_hardware_write
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_irq_usart1_enable
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_irq_usart1_disable
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[58]"></a>led_off</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_led.o(i.led_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = led_off
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_reverse
</UL>

<P><STRONG><a name="[59]"></a>led_on</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_led.o(i.led_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = led_on
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_reverse
</UL>

<P><STRONG><a name="[56]"></a>led_reverse</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_led.o(i.led_reverse))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = led_reverse &rArr; led_status
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_status
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_off
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_led
</UL>

<P><STRONG><a name="[57]"></a>led_status</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_led.o(i.led_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = led_status
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_reverse
</UL>

<P><STRONG><a name="[1c]"></a>main</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = main &rArr; app_init &rArr; max7456_init &rArr; max7456_draw_allchar &rArr; max7456_write_char_xy &rArr; max7456_write_char &rArr; max7456_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_task
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[5c]"></a>max7456_debug</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_debug.o(i.max7456_debug))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = max7456_debug &rArr; max7456_debug_read_frame &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_debug_read_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_debug
</UL>

<P><STRONG><a name="[5d]"></a>max7456_debug_read_frame</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, app_debug.o(i.max7456_debug_read_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = max7456_debug_read_frame &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_debug
</UL>

<P><STRONG><a name="[5f]"></a>max7456_draw_allchar</STRONG> (Thumb, 262 bytes, Stack size 8 bytes, app_max7456.o(i.max7456_draw_allchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = max7456_draw_allchar &rArr; max7456_write_char_xy &rArr; max7456_write_char &rArr; max7456_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_write_char_xy
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_init
</UL>

<P><STRONG><a name="[73]"></a>max7456_getdata</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_max7456.o(i.max7456_getdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = max7456_getdata
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_max7456_draw_osd
</UL>

<P><STRONG><a name="[49]"></a>max7456_init</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, app_max7456.o(i.max7456_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = max7456_init &rArr; max7456_draw_allchar &rArr; max7456_write_char_xy &rArr; max7456_write_char &rArr; max7456_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_write_reg
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_read_reg
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_offset
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_draw_allchar
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
</UL>

<P><STRONG><a name="[63]"></a>max7456_offset</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_max7456.o(i.max7456_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = max7456_offset &rArr; max7456_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_init
</UL>

<P><STRONG><a name="[62]"></a>max7456_read_reg</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, app_max7456.o(i.max7456_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = max7456_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_init
</UL>

<P><STRONG><a name="[64]"></a>max7456_write_char</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_max7456.o(i.max7456_write_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = max7456_write_char &rArr; max7456_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_write_char_xy
</UL>

<P><STRONG><a name="[60]"></a>max7456_write_char_xy</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, app_max7456.o(i.max7456_write_char_xy))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = max7456_write_char_xy &rArr; max7456_write_char &rArr; max7456_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_write_char
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_draw_allchar
</UL>

<P><STRONG><a name="[61]"></a>max7456_write_reg</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_max7456.o(i.max7456_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = max7456_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_write_char
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_offset
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_init
</UL>

<P><STRONG><a name="[5b]"></a>start_task</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, app_speedgroup.o(i.start_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = start_task
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>sys_api_init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, sys_api.o(i.sys_api_init))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[65]"></a>sys_clock_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sys_clock.o(i.sys_clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sys_clock_init &rArr; drv_clock_inside
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_clock_inside
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[67]"></a>sys_delay_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sys_delay.o(i.sys_delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_systick_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[21]"></a>sys_delay_ms</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sys_delay.o(i.sys_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_systick_delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_api.o(i.sys_api_init)
</UL>
<P><STRONG><a name="[20]"></a>sys_delay_us</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sys_delay.o(i.sys_delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_systick_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_api.o(i.sys_api_init)
</UL>
<P><STRONG><a name="[6b]"></a>sys_frame_pack</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, sys_protocol.o(i.sys_frame_pack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_frame_pack &rArr; sys_frame_pack_body
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_pack_head
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_pack_body
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_write
</UL>

<P><STRONG><a name="[6d]"></a>sys_frame_pack_body</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, sys_protocol.o(i.sys_frame_pack_body))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_frame_pack_body
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_pack
</UL>

<P><STRONG><a name="[6c]"></a>sys_frame_pack_head</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sys_protocol.o(i.sys_frame_pack_head))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_pack
</UL>

<P><STRONG><a name="[41]"></a>sys_frame_parse</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sys_protocol.o(i.sys_frame_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_frame_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_pasre_body
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_parse_head
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[22]"></a>sys_frame_read</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, sys_protocol.o(i.sys_frame_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_frame_read
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_api.o(i.sys_api_init)
</UL>
<P><STRONG><a name="[23]"></a>sys_frame_write</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, sys_protocol.o(i.sys_frame_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sys_frame_write &rArr; sys_frame_pack &rArr; sys_frame_pack_body
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_pack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_api.o(i.sys_api_init)
</UL>
<P><STRONG><a name="[5a]"></a>sys_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sys.o(i.sys_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = sys_init &rArr; drv_usart1_hardware_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_api_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_usart1_hardware_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_timer2_init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_max7456_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_led_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c]"></a>task_debug</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_debug.o(i.task_debug))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_debug &rArr; max7456_debug &rArr; max7456_debug_read_frame &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_debug
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_speedgroup.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>task_led</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_led.o(i.task_led))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = task_led &rArr; led_reverse &rArr; led_status
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_reverse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_speedgroup.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>task_max7456_draw_osd</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_max7456.o(i.task_max7456_draw_osd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = task_max7456_draw_osd &rArr; max7456_getdata
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7456_getdata
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_speedgroup.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>task_null</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sys.o(i.task_null))
<BR>[Address Reference Count : 1]<UL><LI> app_speedgroup.o(.data)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6e]"></a>sys_frame_parse_head</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, sys_protocol.o(i.sys_frame_parse_head))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_parse
</UL>

<P><STRONG><a name="[6f]"></a>sys_frame_pasre_body</STRONG> (Thumb, 230 bytes, Stack size 0 bytes, sys_protocol.o(i.sys_frame_pasre_body))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_frame_parse
</UL>

<P><STRONG><a name="[40]"></a>SetSysClock</STRONG> (Thumb, 206 bytes, Stack size 12 bytes, drv_clock.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[51]"></a>spi_receivedata8</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_spi_hardware.o(i.spi_receivedata8))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_spi1_hardware_write
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_spi1_hardware_read
</UL>

<P><STRONG><a name="[50]"></a>spi_senddata8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, drv_spi_hardware.o(i.spi_senddata8))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_spi1_hardware_write
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_spi1_hardware_read
</UL>

<P><STRONG><a name="[44]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[43]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[47]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[46]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
